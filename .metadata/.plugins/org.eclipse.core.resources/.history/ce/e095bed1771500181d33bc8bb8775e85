import java.security.KeyPair;
import java.security.Signature;
import java.util.Base64;



public class FirmaDigital {
	private static final String ALG1 = "DSA"; //Más rapido para firmar
	private static final String ALG2 = "RSA"; //Más rápido para verificar
	
	private static final String PROTO1 = "DSA"; 
	private static final String PROTO2 = "SHA256WithRSA";
	
	//DSA solo se puede usar para firmar o verificar.
	//RSA puede ser usado para encriptar y desencriptar también.
	
	private static String firmar(String mensaje, KeyPair clave)throws Exception{
		System.out.println("Creando un objeto de tipo Signature");
		Signature firmaContainer=Signature.getInstance(ALG1);
		
		System.out.println("Firmando el mensaje con la parte privada de la clave asimétrica.");
		firmaContainer.initSign(clave.getPrivate());
		
		firmaContainer.update(mensaje.getBytes());
		byte[] firma = firmaContainer.sign();
		
		return Base64.getEncoder().encodeToString(firma);
	}
	private static boolean esFirmaValida(String mensajeEnClaro,String firma,KeyPair clave) throws Exception{
		
	}
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
